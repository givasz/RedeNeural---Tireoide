# -*- coding: utf-8 -*-
"""RedeTireoide.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j9YuaJFDk-XXsMe-qZ_bcrDo7vV1HlgY
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OrdinalEncoder
from sklearn.naive_bayes import GaussianNB
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import classification_report, accuracy_score, confusion_matrix

table = pd.read_csv('Thyroid_Diff.csv')
table.head()

x1 = np.array(table['Age']).reshape(-1,1)
x2 = table.drop(['Recurred', 'Age'], axis=1)

x2Ord = OrdinalEncoder()
x2 = x2Ord.fit_transform(x2)

x = np.concatenate((x1, x2), axis=1)
y = np.array(table['Recurred'])

train_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.25)

model = GaussianNB()
model.fit(train_x, train_y)

test_est_y = model.predict(test_x)

mat = confusion_matrix(test_y, test_est_y)
sns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False,
            xticklabels=model.classes_, yticklabels=model.classes_)
plt.xlabel('Valor Real')
plt.ylabel('Valor Estimado')
plt.title('Matriz de Confusão - Teste')
plt.show()

print(classification_report(test_y, test_est_y, target_names=['Não Recorrente', 'Recorrente']))
print('A acurácia é', accuracy_score(test_est_y, test_y))

acuracias = []

n_repeticoes = 10

for i in range(n_repeticoes):

    x1 = np.array(table['Age']).reshape(-1,1)
    x2 = table.drop(['Recurred', 'Age'], axis=1)

    x2Ord = OrdinalEncoder()
    x2 = x2Ord.fit_transform(x2)

    x = np.concatenate((x1, x2), axis=1)
    y = np.array(table['Recurred'])

    train_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.25)

    model = GaussianNB()
    model.fit(train_x, train_y)

    test_est_y = model.predict(test_x)

    acuracia = accuracy_score(test_y, test_est_y)
    acuracias.append(acuracia)

media_acuracia = np.mean(acuracias)

print(f'Acurácias em {n_repeticoes} execuções: {acuracias}')
print(f'Média das acurácias: {media_acuracia:.4f}')

plt.figure(figsize=(8, 5))
plt.plot(range(1, n_repeticoes+1), acuracias, marker='o', linestyle='-')
plt.title('Variação das Acurácias em Múltiplas Execuções')
plt.xlabel('Execução')
plt.ylabel('Acurácia')
plt.grid(True)
plt.show()